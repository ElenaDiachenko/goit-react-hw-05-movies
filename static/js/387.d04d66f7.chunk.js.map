{"version":3,"file":"static/js/387.d04d66f7.chunk.js","mappings":"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","sources":["components/Box.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/APP.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(225px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[1]}px;\n  margin-bottom: ${p => p.theme.space[1]}px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.borders.sm};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  object-fit: cover;\n`;\nexport const Description = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Item, Image, Description } from './Cast.styled';\nimport { fetchCast } from 'services/APP';\nimport { IMG_PATH } from '../../pages/Home';\nimport bgImage from '../../images/image.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    try {\n      (async function getCast() {\n        const data = await fetchCast(movieId);\n        setCast(data);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <Container>\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <Item key={id}>\n            <Image\n              src={profile_path ? IMG_PATH + profile_path : bgImage}\n              alt={name}\n            />\n            <Description>Actor: {name}</Description>\n            <Description>Character: {character}</Description>\n          </Item>\n        );\n      })}\n    </Container>\n  );\n};\n\nCast.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n  id: PropTypes.number,\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesContainer = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: ${p => p.theme.borders.none};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  object-fit: cover;\n`;\nexport const MovieTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\nexport const StyledLink = styled(Link)`\n  padding: 8px 16px;\n  border-radius: ${p => p.theme.radii.sm};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieItem,\n  MoviesContainer,\n  MoviePoster,\n  MovieTitle,\n  StyledLink,\n} from './MoviesList.styled';\nimport { IMG_PATH } from '../../pages/Home';\nimport bgImage from '../../images/image.png';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={poster_path ? IMG_PATH + poster_path : bgImage}\n                alt={title}\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </StyledLink>\n          </MovieItem>\n        );\n      })}\n    </MoviesContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from 'services/APP';\nimport { Box } from 'components/Box';\nimport { toast } from 'react-toastify';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      (async function getMovies() {\n        const response = await fetchTrendingMovies();\n        if (response.length === 0) {\n          toast.warning(\n            'Sorry, there are no movies matching your search query. Please, try again'\n          );\n          return;\n        }\n        setMovies(response);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  return (\n    <>\n      <main>\n        <>\n          <Box as=\"h1\" mb={16}>\n            Trending today\n          </Box>\n          {movies && <MoviesList movies={movies} />}\n        </>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = 'a5f5962e6f7f3d792e77e5ce1e0a6398';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByKeyword = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Container","p","theme","Item","borders","sm","Image","Description","fontWeights","semiBold","fontSizes","s","lineHeights","heading","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","data","error","console","log","message","map","id","profile_path","name","character","src","IMG_PATH","bgImage","alt","MoviesContainer","MovieItem","none","MoviePoster","MovieTitle","m","StyledLink","Link","radii","colors","black","medium","MoviesList","movies","location","useLocation","title","poster_path","to","state","from","setMovies","fetchTrendingMovies","response","length","toast","as","mb","axios","API_KEY","results","fetchMoviesByKeyword","query","page","fetchMovieById","fetchReviews"],"sourceRoot":""}