{"version":3,"file":"static/js/810.b6d8a434.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/HomeList.jsx","pages/Home.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/APP.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesContainer = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: ${p => p.theme.borders.none};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  object-fit: cover;\n`;\nexport const MovieTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\nexport const StyledLink = styled(Link)`\n  padding: 8px 16px;\n  border-radius: ${p => p.theme.radii.sm};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MoviesContainer,\n  MoviePoster,\n  MovieTitle,\n  StyledLink,\n} from './MoviesList.styled';\nimport { IMG_PATH } from '../../pages/Home';\nimport bgImage from '../../images/image.png';\n\nexport const HomeList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieItem key={id}>\n            <StyledLink to={`movies/${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={poster_path ? IMG_PATH + poster_path : bgImage}\n                alt={title}\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </StyledLink>\n          </MovieItem>\n        );\n      })}\n    </MoviesContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { HomeList } from '../components/MoviesList/HomeList';\nimport { fetchTrendingMovies } from 'services/APP';\nimport { toast } from 'react-toastify';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      (async function getMovies() {\n        const response = await fetchTrendingMovies();\n        if (response.length === 0) {\n          toast.warning(\n            'Sorry, there are no images matching your search query. Please, try again'\n          );\n          return;\n        }\n        setMovies(response);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  return (\n    <>\n      <main>\n        <>\n          <h1>Trending today</h1>\n          {movies ? (\n            <HomeList movies={movies} />\n          ) : (\n            <p>\n              Sorry, there are no movies matching your search query. Please, try\n              again.\n            </p>\n          )}\n        </>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Container = styled.div`\n  top: 8px;\n  left: 0;\n  position: sticky;\n  z-index: 15;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  max-width: 500px;\n  margin: 0 auto;\n  border-radius: ${p => p.theme.radii.sm};\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: ${p => p.theme.fontSizes.m};\n  border: ${p => p.theme.borders.none};\n  line-height: ${p => p.theme.lineHeights.body};\n  outline: none;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border: ${p => p.theme.borders.none};\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { HiSearch } from 'react-icons/hi';\nimport { Container, SearchForm, Input, Button } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n    actions.setSubmitting(false);\n    actions.resetForm();\n  };\n\n  return (\n    <Container>\n      <Formik initialValues={{ value: '' }} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => {\n          // console.log(isSubmitting);\n          return (\n            <SearchForm>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                <HiSearch size={25} />\n              </Button>\n\n              <Input\n                name=\"value\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n              />\n            </SearchForm>\n          );\n        }}\n      </Formik>\n    </Container>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MoviesContainer,\n  MoviePoster,\n  MovieTitle,\n  StyledLink,\n} from './MoviesList.styled';\nimport { IMG_PATH } from '../../pages/Home';\nimport bgImage from '../../images/image.png';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieItem key={id}>\n            <StyledLink to={`${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={poster_path ? IMG_PATH + poster_path : bgImage}\n                alt={title}\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </StyledLink>\n          </MovieItem>\n        );\n      })}\n    </MoviesContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMoviesByKeyword } from 'services/APP';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n    try {\n      (async function getMovies() {\n        const response = await fetchMoviesByKeyword(movieQuery, page);\n        setMovies(movies => [...movies, ...response]);\n        setPage(page);\n      })();\n    } catch (error) {\n      console.log(error.mesage);\n      toast.info('Oop! Something went wrong! Try again later!');\n    }\n  }, [movieQuery, page]);\n\n  const handleSubmit = async ({ value }) => {\n    if (value.trim().length === 0) {\n      toast.info(\n        'Sorry, there are no movies matching your search query. Please, try again'\n      );\n      return;\n    }\n    setPage(1);\n    await setSearchParams(value !== '' ? { query: value } : {});\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <main>\n        <SearchBar onSubmit={handleSubmit} />\n        {movies ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <p>\n            Sorry, there are no movies matching your search query. Please, try\n            again.\n          </p>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = 'a5f5962e6f7f3d792e77e5ce1e0a6398';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByKeyword = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["MoviesContainer","styled","p","theme","space","MovieItem","borders","none","MoviePoster","MovieTitle","fontWeights","semiBold","fontSizes","m","lineHeights","heading","StyledLink","Link","radii","sm","colors","black","medium","HomeList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","IMG_PATH","bgImage","alt","useState","setMovies","useEffect","fetchTrendingMovies","response","length","toast","error","console","log","message","Container","SearchForm","Form","Input","Field","body","Button","SearchBar","onSubmit","handleSubmit","values","actions","setSubmitting","resetForm","initialValues","value","isSubmitting","type","disabled","size","name","autoComplete","autoFocus","placeholder","MoviesList","page","setPage","useSearchParams","searchParams","setSearchParams","movieQuery","get","fetchMoviesByKeyword","mesage","trim","query","axios","API_KEY","data","results","fetchMovieById","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}