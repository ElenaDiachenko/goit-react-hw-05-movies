{"version":3,"file":"static/js/779.34eeb09e.chunk.js","mappings":"8LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,uKClBWC,EAAYT,EAAAA,GAAAA,GAAH,iIAGb,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAKGU,EAAOZ,EAAAA,GAAAA,GAAH,iRAIR,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACG,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACK,SAAAQ,GAAC,OAAIA,EAAEC,MAAME,QAAQC,EAApB,IAIPC,EAAaf,EAAAA,GAAAA,GAAH,qFACN,SAAAU,GAAC,OAAIA,EAAEC,MAAMK,YAAYC,IAAxB,IACH,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IACC,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,YAAYC,OAAxB,IAGLC,EAAUtB,EAAAA,GAAAA,EAAH,qFACH,SAAAU,GAAC,OAAIA,EAAEC,MAAMK,YAAYO,MAAxB,IACH,SAAAb,GAAC,OAAIA,EAAEC,MAAMO,UAAUM,CAAtB,IACC,SAAAd,GAAC,OAAIA,EAAEC,MAAMS,YAAYK,IAAxB,I,mBCqBlB,EA3CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,KACE,mCAAC,qGACoBC,EAAAA,EAAAA,IAAaN,GADjC,OACOO,EADP,OAECH,EAAWG,GAFZ,2CAAD,sDAMD,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACX,KAGF,8BACGG,EAAQS,OAAS,GAChB,SAAC7B,EAAD,UACGoB,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAC9B,EAAD,YACE,SAACG,EAAD,UAAa0B,KACb,SAACnB,EAAD,UAAUoB,MAFDF,EAKd,OAGH,SAACzC,EAAA,EAAD,WACE,qEAKT,C,2MCxCD4C,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,IAAAA,IAAA,qCAAwCC,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASb,KAAKc,SAFY,2CAAH,qDAKnBC,EAAoB,mCAAG,WAAOC,EAAOC,GAAd,uFACXP,IAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,gCACiDC,EADjD,yBADW,cAC5BJ,EAD4B,yBAI3BA,EAASb,KAAKc,SAJa,2CAAH,wDAOpBI,EAAc,mCAAG,WAAMzB,GAAN,uFACLiB,IAAAA,IAAA,gBACZjB,EADY,oBACOkB,EADP,oBADK,cACtBE,EADsB,yBAIrBA,EAASb,MAJY,2CAAH,sDAQdmB,EAAS,mCAAG,WAAM1B,GAAN,uFACAiB,IAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADA,cACjBE,EADiB,yBAIhBA,EAASb,KAAKoB,MAJE,2CAAH,sDAOTrB,EAAY,mCAAG,WAAMN,GAAN,uFACHiB,IAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADG,cACpBE,EADoB,yBAInBA,EAASb,KAAKc,SAJK,2CAAH,qD","sources":["components/Box.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/APP.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.borders.sm};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const AuthorName = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\n\nexport const Content = styled.p`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchReviews } from 'services/APP';\nimport { Container, Item, AuthorName, Content } from './Reviews.styled';\nimport { Box } from 'components/Box';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      (async function getReviews() {\n        const data = await fetchReviews(movieId);\n        setReviews(data);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Container>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <Item key={id}>\n                <AuthorName>{author}</AuthorName>\n                <Content>{content}</Content>\n              </Item>\n            );\n          })}\n        </Container>\n      ) : (\n        <Box>\n          <h3>Sorry, this movie has no reviews yet.</h3>\n        </Box>\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n  id: PropTypes.number,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = 'a5f5962e6f7f3d792e77e5ce1e0a6398';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByKeyword = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Container","p","theme","Item","borders","sm","AuthorName","fontWeights","bold","fontSizes","m","lineHeights","heading","Content","normal","s","body","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","data","error","console","log","message","length","map","id","author","content","axios","API_KEY","fetchTrendingMovies","response","results","fetchMoviesByKeyword","query","page","fetchMovieById","fetchCast","cast"],"sourceRoot":""}