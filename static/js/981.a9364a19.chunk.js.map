{"version":3,"file":"static/js/981.a9364a19.chunk.js","mappings":"kTAGaA,EAAkBC,EAAAA,GAAAA,GAAH,iOAId,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAKDC,EAAYJ,EAAAA,GAAAA,GAAH,qXAIH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,QAAQC,IAApB,IAUPC,EAAcP,EAAAA,GAAAA,IAAH,wGAGL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPK,EAAaR,EAAAA,GAAAA,GAAH,qFACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,QAAxB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,CAAtB,IACC,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,YAAYC,OAAxB,IAELC,GAAaf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,mIAEJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMe,MAAMC,EAAlB,IAET,SAAAjB,GAAC,OAAIA,EAAEC,MAAMiB,OAAOC,KAAnB,IACK,SAAAnB,GAAC,OAAIA,EAAEC,MAAMO,YAAYY,MAAxB,G,6LChCLC,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMR,GAA/C,WACE,SAAC,KAAD,CACES,IAAKJ,EAAcK,EAAWL,EAAcM,EAC5CC,IAAKR,KAEP,SAAC,KAAD,UAAaA,QANDD,EAUnB,KAGN,E,oBC3BYO,EAAW,mCAyCxB,EAvCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,KACE,mCAAC,qGACwBC,EAAAA,EAAAA,MADxB,UAEyB,KADlBC,EADP,QAEcC,OAFd,uBAGGC,EAAAA,GAAAA,QACE,4EAJL,0BAQCL,EAAUG,GARX,2CAAD,sDAYD,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,KAGD,+BACE,2BACE,iCACE,2CACCxB,GACC,SAACD,EAAD,CAAUC,OAAQA,KAElB,2GASX,C,2MCzCDyB,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCAEHT,EAAmB,mCAAG,oGACVQ,IAAAA,IAAA,qCAAwCC,IAD9B,cAC3BR,EAD2B,yBAE1BA,EAASS,KAAKC,SAFY,2CAAH,qDAKnBC,EAAoB,mCAAG,WAAOC,EAAOC,GAAd,uFACXN,IAAAA,IAAA,+BACGC,EADH,kBACoBI,EADpB,gCACiDC,EADjD,yBADW,cAC5Bb,EAD4B,yBAI3BA,EAASS,KAAKC,SAJa,2CAAH,wDAOpBI,EAAc,mCAAG,WAAMC,GAAN,uFACLR,IAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADK,cACtBR,EADsB,yBAIrBA,EAASS,MAJY,2CAAH,sDAQdO,EAAS,mCAAG,WAAMD,GAAN,uFACAR,IAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADA,cACjBR,EADiB,yBAIhBA,EAASS,KAAKQ,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,IAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADG,cACpBR,EADoB,yBAInBA,EAASS,KAAKC,SAJK,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/HomeList.jsx","pages/Home.jsx","services/APP.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesContainer = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-radius: ${p => p.theme.borders.none};\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  object-fit: cover;\n`;\nexport const MovieTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n`;\nexport const StyledLink = styled(Link)`\n  padding: 8px 16px;\n  border-radius: ${p => p.theme.radii.sm};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MoviesContainer,\n  MoviePoster,\n  MovieTitle,\n  StyledLink,\n} from './MoviesList.styled';\nimport { IMG_PATH } from '../../pages/Home';\nimport bgImage from '../../images/image.png';\n\nexport const HomeList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieItem key={id}>\n            <StyledLink to={`movies/${id}`} state={{ from: location }}>\n              <MoviePoster\n                src={poster_path ? IMG_PATH + poster_path : bgImage}\n                alt={title}\n              />\n              <MovieTitle>{title}</MovieTitle>\n            </StyledLink>\n          </MovieItem>\n        );\n      })}\n    </MoviesContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { HomeList } from '../components/MoviesList/HomeList';\nimport { fetchTrendingMovies } from 'services/APP';\nimport { toast } from 'react-toastify';\nexport const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      (async function getMovies() {\n        const response = await fetchTrendingMovies();\n        if (response.length === 0) {\n          toast.warning(\n            'Sorry, there are no images matching your search query. Please, try again'\n          );\n          return;\n        }\n        setMovies(response);\n      })();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  return (\n    <>\n      <main>\n        <>\n          <h1>Trending today</h1>\n          {movies ? (\n            <HomeList movies={movies} />\n          ) : (\n            <p>\n              Sorry, there are no movies matching your search query. Please, try\n              again.\n            </p>\n          )}\n        </>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = 'a5f5962e6f7f3d792e77e5ce1e0a6398';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByKeyword = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["MoviesContainer","styled","p","theme","space","MovieItem","borders","none","MoviePoster","MovieTitle","fontWeights","semiBold","fontSizes","m","lineHeights","heading","StyledLink","Link","radii","sm","colors","black","medium","HomeList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","IMG_PATH","bgImage","alt","useState","setMovies","useEffect","fetchTrendingMovies","response","length","toast","error","console","log","message","axios","API_KEY","data","results","fetchMoviesByKeyword","query","page","fetchMovieById","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}